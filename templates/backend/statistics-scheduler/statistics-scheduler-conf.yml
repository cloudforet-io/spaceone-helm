{{- if .Values.backend.enabled }}
  {{- if .Values.backend.services.statisticsScheduler.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: statistics-scheduler-conf
  namespace: {{ .Release.Namespace }}
data:
  statistics.yml: |
    GLOBAL:
      DATABASES:
        default:
          db: 'dev-statistics'
          host: {{ .Values.mongo.host }}
          port: {{ .Values.mongo.port }}
          username: {{ .Values.mongo.username }}
          password: {{ .Values.mongo.password }}
          maxPoolSize: 200
      CACHES:
        default:
          backend: spaceone.core.cache.redis_cache.RedisCache
          host: {{ .Values.redis.host }}
          port: {{ .Values.redis.port }}
          db: 5
          encoding: utf-8
          socket_timeout: 10
          socket_connect_timeout: 10
      LOG:
        loggers:
          spaceone:
            handlers:
              - console
              - file
          celery:
            handlers:
              - console
              - file
        handlers:
          file:
            type: file
            filename: /logs/statistics.log
      CONNECTORS:
        IdentityConnector:
          endpoint:
            v1: grpc://{{ .Values.backend.services.identity.endpoint }}

        ServiceConnector:
          identity: grpc://{{ .Values.backend.services.identity.endpoint }}/v1
          inventory: grpc://{{ .Values.backend.services.inventory.endpoint }}/v1
          plugin: grpc://{{ .Values.backend.services.plugin.endpoint }}/v1
          repository: grpc://{{ .Values.backend.services.repository.endpoint }}/v1
          secret: grpc://{{ .Values.backend.services.secret.endpoint }}/v1
          monitoring: grpc://{{ .Values.backend.services.monitoring.endpoint }}/v1
          config: grpc://{{ .Values.backend.services.config.endpoint }}/v1
          power_scheduler: grpc://{{ .Values.backend.services.power_scheduler.endpoint }}/v1
          cost_saving: grpc://{{ .Values.backend.services.cost_saving.endpoint }}/v1
      HANDLERS:
        authentication:
          - backend: spaceone.core.handler.authentication_handler.AuthenticationGRPCHandler
            uri: grpc://{{ .Values.backend.services.identity.endpoint }}/v1/Domain/get_public_key
            #authorization:
            #- authbackend: spaceone.core.handler.authorization_handler.AuthorizationGRPCHandler
            #authuri: grpc://{{ .Values.backend.services.identity.endpoint }}/v1/Authorization/verify
            #
      CELERY:
        mode: BEAT
        config:
          broker_url: redis://redis:6379
        schedules:
          stat_scheduler:
            task: spaceone.statistics.task.stat_hourly_scheduler.stat_hour_scheduler
            rule_type: interval
            rule:
              period: hours
              every: 1
      TOKEN_INFO:
{{ tpl (toYaml .Values.supervisor.supervisor.token) . | indent 8 }}
  {{- end }}
{{- end }}
